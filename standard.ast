------------------------------------------------------------------
-- standard.ast
--
-- this module implements the standard interpretation for all
-- builtin operator symbols.
--
-- (c) Lutz Hamel, University of Rhode Island
------------------------------------------------------------------
-- arithmetic operators

------------------------------------------------------------------
-- the 'add' function implements the behavior for 
-- the '+' operator for ints, reals, and strings.
function add with a, b do return escape 
"
# return register from 'escape' calls
global __retval__ 

# 'promote' is the type promotion table for primitive
# builtin types which implement the type hierarchy:
#    integer < real < string
type = promote(state.symbol_table.lookup_sym('a')[0], 
               state.symbol_table.lookup_sym('b')[0])

# select the correct add according to type
if type == 'list':
    __retval__ = ('list', 
            state.symbol_table.lookup_sym('a')[1] + 
            state.symbol_table.lookup_sym('b')[1])

elif type == 'integer':
    __retval__ = ('integer', 
            int(state.symbol_table.lookup_sym('a')[1]) + 
            int(state.symbol_table.lookup_sym('b')[1]))

elif type == 'real':
    __retval__ = ('real', 
            float(state.symbol_table.lookup_sym('a')[1]) + 
            float(state.symbol_table.lookup_sym('b')[1]))

elif type == 'string':
    __retval__ = ('string', 
            str(state.symbol_table.lookup_sym('a')[1])+
            str(state.symbol_table.lookup_sym('b')[1]))

else:
    raise ValueError('unsupported type in +')
"     
end function

attach add to __plus__.

------------------------------------------------------------------



